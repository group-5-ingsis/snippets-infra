services:

  certbot:
    image: certbot/certbot
    container_name: "certbot"
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done'"


  nginx:
    image: nginx:latest
    container_name: "nginx"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf.template:/etc/nginx/nginx.conf.template:ro
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    environment:
      - SNIPPETS_PORT=${SNIPPETS_SERVER_PORT}
      - PARSE_PORT=${PARSE_SERVER_PORT}
      - PERMISSION_PORT=${PERMISSION_SERVER_PORT}
    entrypoint: /bin/sh -c "envsubst '\$SNIPPETS_APP_PORT \$PARSE_APP_PORT \$PERMISSION_APP_PORT' < /etc/nginx/nginx.conf.template > /etc/nginx/nginx.conf && nginx -g 'daemon off;'"
    depends_on:
      - certbot

  parse:
    image: ghcr.io/group-5-ingsis/parse:latest-dev
    container_name: "parse"
    ports:
      - ${PARSE_APP_PORT}
    environment:
      SERVER_PORT: ${PARSE_SERVER_PORT}
      SPRING_PROFILES_ACTIVE: "dev"
    env_file:
      - ./.env

  snippets:
    image: ghcr.io/group-5-ingsis/snippets:latest-dev
    container_name: "snippets"
    ports:
      - ${SNIPPETS_APP_PORT}
    environment:
      SPRING_DATASOURCE_URL: ${SNIPPETS_DB_URL}
      SPRING_DATASOURCE_USERNAME: ${SNIPPETS_DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${SNIPPETS_DB_PASSWORD}
      SERVER_PORT: ${SNIPPETS_SERVER_PORT}
      AUTH0_AUDIENCE: ${AUTH0_AUDIENCE}
      AUTH_SERVER_URI: ${AUTH_SERVER_URI}
      AUTH_CLIENT_ID: ${AUTH_CLIENT_ID}
      AUTH_CLIENT_SECRET: ${AUTH_CLIENT_SECRET}
      SPRING_PROFILES_ACTIVE: "dev"
    env_file:
      - ./.env
    depends_on:
      - db-snippets

  db-snippets:
    image: postgres:13
    container_name: "db-snippets"
    environment:
      POSTGRES_USER: ${SNIPPETS_DB_USER}
      POSTGRES_PASSWORD: ${SNIPPETS_DB_PASSWORD}
      POSTGRES_DB: ${SNIPPETS_DB_NAME}
    ports:
      - ${SNIPPETS_DB_PORT}
    volumes:
      - db-snippets-data:/var/lib/postgresql/data

  permission:
    image: ghcr.io/group-5-ingsis/permission:latest-dev
    container_name: "permission"
    ports:
      - ${PERMISSION_APP_PORT}
    environment:
      SPRING_DATASOURCE_URL: ${PERMISSION_DB_URL}
      SPRING_DATASOURCE_USERNAME: ${PERMISSION_DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${PERMISSION_DB_PASSWORD}
      SERVER_PORT: ${PERMISSION_SERVER_PORT}
      AUTH0_AUDIENCE: ${AUTH0_AUDIENCE}
      AUTH_SERVER_URI: ${AUTH_SERVER_URI}
      AUTH_CLIENT_ID: ${AUTH_CLIENT_ID}
      AUTH_CLIENT_SECRET: ${AUTH_CLIENT_SECRET}
      SPRING_PROFILES_ACTIVE: "dev"
    env_file:
      - ./.env
    depends_on:
      - db-permission

  db-permission:
    image: postgres:13
    container_name: "db-permission"
    environment:
      POSTGRES_USER: ${PERMISSION_DB_USER}
      POSTGRES_PASSWORD: ${PERMISSION_DB_PASSWORD}
      POSTGRES_DB: ${PERMISSION_DB_NAME}
    ports:
      - ${PERMISSION_DB_PORT}
    volumes:
      - db-permission-data:/var/lib/postgresql/data

  asset-service:
    container_name: "asset_service"
    image: ghcr.io/austral-ingsis/snippet-asset-service:latest
    ports:
      - "8080:8080"
    environment:
      AZURE_HOST: "http://azurite"
      NEW_RELIC_APP_NAME: "asset-service"
      NEW_RELIC_AGENT_ENABLED: false

  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    container_name: "azurite"
    hostname: azurite
    restart: always
    ports:
      - "10000:10000"
      - "10001:10001"
      - "10002:10002"
    volumes:
      - blob:/workspace

volumes:
  db-snippets-data:
  db-permission-data:
  blob:
    external: false

